<template>
    <ui-layout :brs="brs">
        <ui-container>
            <el-row>
                <el-form :inline="true" :model="queryMap" class="demo-form-inline" label-width="100px">
                    <el-row>
                        <el-col :span="3">
                            <el-form-item label="">
                                <el-input v-model="queryMap.key" placeholder="請輸入消息內容" clearable></el-input>
                            </el-form-item>
                        </el-col>
                        <el-col :span="5">
                            <el-form-item label=" ">
                                <el-button type="primary" @click="getTableData">
                                    <i class="el-icon-search"></i>
                                    <span>查询</span>
                                </el-button>
                                <el-button type="primary" @click="messagesInsert">
                                    <i class="el-icon-circle-plus-outline"></i>
                                    <span>新增</span>
                                </el-button>
                            </el-form-item>
                        </el-col>
                    </el-row>
                </el-form>
            </el-row>
            <el-row>
                <el-col>
                    <el-table :data="tableData" border style="width: 80%">
                        <el-table-column type="index" label="序号" align="center" ></el-table-column>
                        <el-table-column prop="memberName" label="消息接收人" align="center" >
                            <template slot-scope="scope">
                                <span v-if="scope.row.memberName != '' || scope.row.memberName != null">{{scope.row.memberName}}</span>
                                <span v-if="scope.row.memberName == '' || scope.row.memberName == null">全部會員</span>
                            </template>
                        </el-table-column>
                        <el-table-column prop="content" label="消息內容" align="center" ></el-table-column>
                        <el-table-column prop="createTime" label="創建時間" align="center">
                            <template slot-scope="scope">
                                <span>{{scope.row.createTime | dateFmt('yyyy-MM-dd')}}</span>
                            </template>
                        </el-table-column>
                        <el-table-column label="操作" width="300" fixed="right" align="center">
                            <template slot-scope="scope">
                                <el-button type="text" size="small" @click="toDelete(scope.row)" v-text="scope.row.deleted == 'N' ? '刪除' : '已刪除'"></el-button>
                                <el-button type="text" size="small" @click="toEdit(scope.row)" style="margin-left:10px;">編輯</el-button>
                            </template>
                        </el-table-column>
                    </el-table>
                </el-col>
            </el-row>

            <el-dialog  title="新增系統消息" :visible.sync="dialogVisibleInsert" width="20%" :before-close="closeMessageInsert">
                                <span>
                                    <el-form :inline="true" :model="messageMap" ref="messageMap"  class="demo-form-inline" label-position="left" label-width="150px">
                                        <el-col>
                                            <el-row>
                                                  <el-form-item label="消息內容">
                                                      <el-input v-model="messageMap.content" style="width:300px;" type="textarea" :rows="4" placeholder="请输入内容"></el-input>
                                                  </el-form-item>
                                                  <el-form-item label="請選擇接收人">
                                                      <el-select filterable v-model="messageMap.memberId" placeholder="請選擇消息接收人" @change="messageChange" size="18">
                                                          <el-option v-for="i in memberArr" :key="i.name" :label="i.name" :value="i.id"></el-option>
                                                      </el-select>
                                                  </el-form-item>
                                            </el-row>
                                        </el-col>
                                    </el-form>
                                </span>
                                <span slot="footer" class="dialog-footer">
                                    <el-button type="primary" @click="messageConfirm">确 定</el-button>
                                </span>
                </el-dialog>

                <el-dialog  title="編輯系統消息" :visible.sync="dialogVisibleEdit" width="20%" :before-close="closeMessageEdit">
                                <span>
                                    <el-form :inline="true" :model="messageMap" ref="messageMap"  class="demo-form-inline" label-position="left" label-width="150px">
                                        <el-col>
                                            <el-row>
                                                  <el-form-item label="消息內容">
                                                      <el-input v-model="messageMap.content" style="width:300px;" type="textarea" :rows="4" placeholder="请输入内容"></el-input>
                                                  </el-form-item>
                                                  <el-form-item label="請選擇接收人">
                                                      <el-select filterable v-model="messageMap.memberId" placeholder="請選擇消息接收人" @change="messageChange" size="18">
                                                          <el-option v-for="i in memberArr" :key="i.name" :label="i.name" :value="i.id"></el-option>
                                                      </el-select>
                                                  </el-form-item>
                                            </el-row>
                                        </el-col>
                                    </el-form>
                                </span>
                                <span slot="footer" class="dialog-footer">
                                    <el-button type="primary" @click="messageConfirmEdit">确 定</el-button>
                                </span>
                </el-dialog>


            <el-row>
                <ui-page :total="total" :pageSize="10" @size-change="handleSizeChange" @current-change="handleCurrentChange"></ui-page>
            </el-row>
        </ui-container>
    </ui-layout>
</template>

<script>
import UiPage from "../../components/UiPage.vue";
import { Loading } from "element-ui";
import { exportExcel } from "../../../config/project/project.env";
export default {
  components: { UiPage, Loading },
  data() {
    return {
      exportExcel:exportExcel,
      brs: [{ name: "系統消息", to: { name: "messageManager" } }],
      total: 100,
      queryMap: {
        pageNo: 1,
        pageSize: 10,
        key: "",
      },
      messageMap:{
        id:null,
        content:null,
        memberId:null
      },
      tableData: [],
      dialogVisibleInsert:false,
      dialogVisibleEdit:false,
      memberArr:[],
      memberMap:{
        pageNo: 1,
        pageSize: 100000,
      }
    };
  },
  mounted() {
    this.getTableData();
    this.getMember();
  },
  computed: {
    
  },
  methods: {
    //下拉选择信用卡类型
    messageChange(val){
      this.messageMap.memberId = val;
    },
    getMember() {
      let loadingInstance = Loading.service({ fullscreen: true });
      this.$post("memberList", this.memberMap)
        .then(res => {
          this.memberArr = res.list;
          loadingInstance.close();
        })
        .catch(() => {
          loadingInstance.close();
        });
    },
    //點擊新增觸發
    messagesInsert(){
      this.messageMap.id= null;
      this.messageMap.content= null;
      this.messageMap.memberId= null;
      this.dialogVisibleInsert = true;
    },
    //确定新增消息触发
    messageConfirm() {
      let loadingInstance = Loading.service({ fullscreen: true });
      this.$post("messagesSave", this.messageMap)
        .then(res => {
          this.dialogVisibleInsert = false;
          this.$message({
            showClose: true,
            message: "新增系統消息成功",
            type: "success",
            center: true
          });
          loadingInstance.close();
          this.getTableData();
        }).catch(() => {
          loadingInstance.close();
        });
    },
    //确定修改消息触发
    messageConfirmEdit() {
      let loadingInstance = Loading.service({ fullscreen: true });
      this.$post("messagesSave", this.messageMap)
        .then(res => {
          this.dialogVisibleEdit = false;
          this.$message({
            showClose: true,
            message: "編輯系統消息成功",
            type: "success",
            center: true
          });
          loadingInstance.close();
          this.getTableData();
        }).catch(() => {
          loadingInstance.close();
        });
    },
    closeMessageInsert(done){
        this.messageMap.id = null;
        this.messageMap.memberId = null;
        this.messageMap.content = null;
        done();
    },
    closeMessageEdit(done){
        this.messageMap.id = null;
        this.messageMap.memberId = null;
        this.messageMap.content = null;
        done();
    },
    //编辑
    toEdit(row){
        this.messageMap.id = row.id;
        this.messageMap.memberId = row.memberId;
        this.messageMap.content = row.content;
        this.dialogVisibleEdit = true;
    },
    toDelete(row){
      let visibtext = null;
      let deleted = null;
      if (row.deleted == "N") {
        visibtext = "刪除";
        deleted = "Y";
      }
      if (row.deleted == "Y") {
        visibtext = "恢復";
        deleted = "N";
      }
      this.$confirm("是否確認對該係統消息進行" + visibtext + "操作", "提示", {
        confirmButtonText: "確定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(() => {
          this.$post("messagesSave", { id: row.id, deleted: deleted }).then(res => {
            this.getTableData();
            this.$message({ message: "操作成功", 
                            type: "success",
                            center:true });
          });
    }).catch(() => {});
    },
    getTableData() {
      let loadingInstance = Loading.service({ fullscreen: true });
      this.$post("messagesList", this.queryMap)
        .then(res => {
          this.tableData = res.list;
          this.total = res.total;
          loadingInstance.close();
        })
        .catch(() => {
          loadingInstance.close();
        });
    },
    handleSizeChange(val) {
      this.queryMap.pageNo = val;
      this.getTableData();
    },
    handleCurrentChange(val) {
      this.queryMap.pageNo = val;
      this.getTableData();
    }
  }
};
</script>

<style>
@import "../../style/teaend.less";
</style>